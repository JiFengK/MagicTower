using SafeCoroutine;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;

namespace MagicTower
{
    namespace Logic
    {
        /// <summary>
        /// Tile map.
        /// </summary>
        public class TileMap
        {
            private Display.TileMapDisplay mDisplay;
            public Display.TileMapDisplay Display
            {
                get { return mDisplay; }
            }

            /// <summary>
            /// 地图宽度
            /// </summary>
            private uint mWidth;
            public uint Width
            {
                get { return mWidth; }
            }

            /// <summary>
            /// 地图高度
            /// </summary>
            private uint mHeight;
            public uint Height
            {
                get { return mHeight; }
            }

            /// <summary>
            /// 地板层
            /// </summary>
            private TileLayer mLayerFloor;
            public TileLayer LayerFloor
            {
                get { return mLayerFloor; }
            }

            /// <summary>
            /// 碰撞层
            /// </summary>
            private TileLayer mLayerCollide;
            public TileLayer LayerCollide
            {
                get { return mLayerCollide; }
            }

            public void Init(uint width, uint height)
            {
                mWidth = width;
                mHeight = height;

                mLayerFloor = new TileLayer();
                mLayerFloor.Init(this, width, height);

                mLayerCollide = new TileLayer();
                mLayerCollide.Init(this, width, height);
            }

            public IEnumerator Enter()
            {
                if (mDisplay == null)
                {
                    mDisplay = Game.Instance.DisplayFactory.GetTileMapDisplay(this);
                }

                yield return CoroutineManager.StartCoroutine(mDisplay.BeginEnter());

                foreach (Tile tile in mLayerFloor)
                {
                    yield return CoroutineManager.StartCoroutine(tile.Enter());
                }

                foreach (Tile tile in mLayerCollide)
                {
                    yield return CoroutineManager.StartCoroutine(tile.Enter());
                }

                yield return CoroutineManager.StartCoroutine(mDisplay.EndEnter());
            }
        }
    }
}
